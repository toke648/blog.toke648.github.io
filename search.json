[{"title":"个人计算机使用观","date":"2025-08-07T18:34:00.000Z","url":"/2025/08/08/%E4%B8%AA%E4%BA%BA%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%BF%E7%94%A8%E8%A7%82/","tags":[["计算机","/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"]],"categories":[["认知探索","/categories/%E8%AE%A4%E7%9F%A5%E6%8E%A2%E7%B4%A2/"]],"content":" 的大部分创作性的内容、想法、记录等都会发布到个人博客或者其他账号，发完就删了。然后项目性，以及点子类型的往往都放到Workbench，尽量压缩，然后整体统一发布到Github仓库，其他项目就单独发到Github，尽量不在电脑上保留过多不重要的数据，因此Workbench可能随时是空的，即用即下，个人数据类型的话如TIM里的就保存到U盘或网盘随时携带，相当于一个工作台，其他的话都是现在正在学习和使用的数据，学习完后就会分类或删除，因此电脑上基本上只有TIM、Workbench、以及各种软件，除此以外没有我主动保存的数据，但就算这样电脑里面还是会产生过多冗杂的数据 "},{"title":"土豆佬ba漫画日文完整","date":"2025-08-07T18:01:00.000Z","url":"/2025/08/08/%E5%9C%9F%E8%B1%86%E4%BD%ACba%E6%BC%AB%E7%94%BB%E5%AE%8C%E6%95%B4%E8%B5%84%E6%BA%90/","categories":[["资源","/categories/%E8%B5%84%E6%BA%90/"]],"content":" python爬虫实现（觉得超级好看，但放桌面占地方，因此不如放到网络上），仅分享，侵权删 还有就是，我打算把所有资源都放到网盘里方便下载，因此现在先暂时建了链接，所有分享都放在了里面，有需要的可以下载 通过网盘分享的文件：资源链接:  提取码: 28em"},{"title":"7/29 认知探索","date":"2025-07-28T16:32:00.000Z","url":"/2025/07/29/7-29-%E8%AE%A4%E7%9F%A5%E6%8E%A2%E7%B4%A2/","categories":[["认知探索","/categories/%E8%AE%A4%E7%9F%A5%E6%8E%A2%E7%B4%A2/"]],"content":"没什么好说的。。。 附录："},{"title":"天文记录 | 牛顿反射式望远镜","date":"2025-07-23T17:02:00.000Z","url":"/2025/07/24/%E5%A4%A9%E6%96%87%E8%AE%B0%E5%BD%95%20%E7%89%9B%E9%A1%BF%E5%8F%8D%E5%B0%84%E5%BC%8F%E6%9C%9B%E8%BF%9C%E9%95%9C/","tags":[["望远镜","/tags/%E6%9C%9B%E8%BF%9C%E9%95%9C/"]],"categories":[["天文","/categories/%E5%A4%A9%E6%96%87/"]],"content":"天文记录｜牛顿反射式望远镜最近这几天，我开始对天文学产生了兴趣，于是查阅了一些资料和书籍。 不过，由于我目前所处的地区属于5级光污染区域，夜空中能看到的星星极为有限，勉强只能看见几颗最亮的一等星。这让我深刻意识到：如果想真正观察星空、辨认星座，甚至观测星云星系，仅凭肉眼是远远不够的。 因此，我翻阅了一些基础科普书籍，如《天文学与生活》《夜观星空》等，初步了解了一些关于望远镜的知识。 望远镜大致可以分为三类： 折射式望远镜（Refracting Telescope）：通过透镜聚光成像； 反射式望远镜（Reflecting Telescope）：通过镜面反射聚焦光线； 射电望远镜（Radio Telescope）：用于接收天体发出的无线电波。 在业余与专业天文爱好者中，最常使用的是反射式望远镜，其中又以**牛顿式反射望远镜（Newtonian Reflector）**最为经典——成像质量好、结构相对简单、制造成本也较低。 天文学简史仰望星空，是人类最古老的思考之一。在我们尚未发明文字和工具时，星辰的运行节奏便已深深刻进人类的认知。 最早的天文学并非“科学”，而是一种与宗教、农业、神话交织的经验智慧。古巴比伦、埃及、中国、玛雅等文明都曾通过观测天体来制定历法、预测自然灾害、安排祭祀。 古巴比伦人能预测月食； 古埃及人通过天狼星的升起预测尼罗河泛滥； 中国古代通过“五星运行”来解读政局更替与天命。 但当时的人类并不理解天体运行背后的机制，星空被视为神意的显现，天体是神祇的化身，天空是一座神圣剧场。 希腊时期：几何化宇宙的雏形天文学第一次接近“科学”的形式，是在古希腊。 毕达哥拉斯认为宇宙是和谐的，用数学描述宇宙结构（“天体的音乐”）； 亚里士塔克斯（Aristarchus）在公元前3世纪提出了日心说，但未被接受（因当时尚无法观测到恒星视差）； 托勒密（Ptolemy）在《天文学大成》中构建了精密的地心模型，以“本轮”“均轮”等几何结构解释行星运动，并主导西方世界一千余年。 伊斯兰黄金时代的传承与发展在欧洲黑暗中世纪期间，天文学的发展在伊斯兰世界得以延续与发展： 天文学家如 巴塔尼（Al-Battani） 和 阿尔苏菲（Al-Sufi） 不仅保留并注解了希腊成果，还在星图绘制、观测仪器和数学方法上做出大量创新； 他们发展了星盘与三角学工具，为文艺复兴铺平了道路。 文艺复兴与科学革命：宇宙观的颠覆到了文艺复兴时期，天文学开始从“看见”走向“解释”：为什么天体如此运动？ **哥白尼（Copernicus）**重新提出日心说，但出于保守态度直到临终才出版《天体运行论》； **第谷（Tycho Brahe）**通过多年的裸眼观测记录了大量精确数据； 开普勒（Kepler）利用第谷的数据提出了椭圆轨道和著名的三大定律； **伽利略（Galileo）**利用自制望远镜观察月球、木星卫星、金星相位，为日心说提供有力证据，却因此遭教会打压。 “它依然在转。”——伽利略 牛顿：统一天体力学的钥匙这些现象虽然被发现，但缺乏统一的解释机制。 直到艾萨克·牛顿（Isaac Newton）提出了万有引力定律，并在1687年出版《自然哲学的数学原理》，用一个公式解释了： 苹果落地 月亮绕地球转 地球绕太阳运行 从此，宇宙第一次被理解为规律驱动的机械系统。 近现代：从望远镜到宇宙起源19世纪后期至今，天文学经历了数次质变： 赫歇尔发现红外线与天王星，并绘制了银河系轮廓； 哈勃发现宇宙在膨胀，提出宇宙大爆炸理论； 爱因斯坦提出广义相对论，重塑引力与时空； 空间望远镜、射电望远镜等使我们观测到黑洞、系外行星、微波背景等宇宙奥秘； 詹姆斯·韦布空间望远镜正带我们探寻宇宙最初的结构。 天文学如今已不仅是观测学科，而是集物理、数学、工程、模拟与空间技术于一体的交叉学科。它不仅关乎我们看到什么，更关乎我们是谁、从哪里来、要去向何方。 牛顿反射式望远镜推荐视频：改变世界的小发明：牛顿反射式望远镜（B站） 早期望远镜采用的是折射式结构，但由于透镜存在色差（不同颜色的光聚焦点不同），导致成像模糊、出现色边。为减小色差，人们不得不拉长焦距，这导致望远镜越造越长，长达几十米，使用非常不便。 这一问题被牛顿从根本上解决： 1666年，他通过三棱镜实验发现光的色散现象，意识到色差源于透镜。因此他提出： “既然色差来自透镜，那我们就不用透镜——用镜面反射成像。” 牛顿用一块凹面金属镜代替透镜，将光线反射汇聚；为避免挡光，他在焦点前放置一块斜放的平面镜，将光线引导至侧面目镜，这就是牛顿反射式望远镜的基本结构。 图：牛顿反射式望远镜原理结构图 如何自制一个牛顿反射式望远镜？如果你也像我一样，想亲手做一台属于自己的牛顿式望远镜，可以从以下几个方面入手： 1. 核心组件 部件 说明 主镜 凹面反射镜，建议从15cm口径起步 次镜 小型平面镜，斜放引导光线 目镜 可更换焦距，用于放大图像 镜筒 建议使用PVC管，支撑光学结构 支架 可自制或购买赤道仪，便于追踪天体 2. 调整与校准 若自制主镜，需经历粗磨 → 精磨 → 抛光 → 检测完整流程； 光轴对准极为关键，决定最终成像质量； 镜筒内部应做防光处理（如贴黑色植绒布）避免杂散光干扰。 3. 保养与维护 镜面清洁：避免刮擦、湿气、灰尘； 光轴校准：定期检查并调整主镜、次镜； 支架稳定性：望远镜越大，对平台越敏感。 个人想法说了这么多，其实我还没有立刻动手做一个望远镜的冲动（或者说冲动还没强烈到必须做）。但我知道，一旦决定开始并计划妥当，我是可以马上动手的。 关于补充根据我目前线上调查，牛顿式反射望远镜的核心材料只有两个： 主镜（越大越清晰） 次镜（偏光镜） 结构上只需准备一个PVC管，将主镜固定到底部，在上部开口处安置次镜与目镜，调整好焦距即可。 手磨镜片简述流程 选玻璃毛坯 粗磨球面 精磨修形 沥青抛光 刀口检测 镀膜封层 抛光说明： 使用沥青（6）+ 松香（3）+ 蜂蜡（1）配制成抛光模，压出网格，贴合镜面。用氧化铈溶液（1:5）配合 W形轨迹抛光，促进球面转抛物面化。每次抛光后应彻底清洁，保持抛光温度 20~25°C，硬度以“指甲可压出痕”为准。建议新手从150mm小镜开始练习。 推荐资源视频教程 家庭自制望远镜（B站） 跟道布森老爷爷学做望远镜 网站 Stellafane 官网（全球最大业余望远镜社区） Mel Bartels’ Telescope Making 星图 &amp; 指南 四季星空图与“星桥法” 电子书资源 百度网盘：《天文学与生活》《夜观星空》链接：点击进入提取码：2ubf "},{"title":"亲子关系与责任","date":"2025-07-14T17:58:00.000Z","url":"/2025/07/15/%E4%BA%B2%E5%AD%90%E5%85%B3%E7%B3%BB%E4%B8%8E%E8%B4%A3%E4%BB%BB/","tags":[["AI","/tags/AI/"]],"categories":[["认知探索","/categories/%E8%AE%A4%E7%9F%A5%E6%8E%A2%E7%B4%A2/"]],"content":"这是我沉的最深的一次，也是最清晰的一次，说实话我不太希望别人看见但我觉得自己的博客应该不会有别人看（或者说是，没些本事的人根本到不了这里，能到这里的都是些已经建立和稳固过属于自己的世界观和价值观的人，因此 嗯。。。，不管了我是写给自己看的）完整的看完可能需要1个多小时，建议劝退 "},{"title":"好无聊","date":"2025-07-08T15:14:00.000Z","url":"/2025/07/08/%E5%A5%BD%E6%97%A0%E8%81%8A/","categories":[["闲聊","/categories/%E9%97%B2%E8%81%8A/"]],"content":"好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊失败了失败了失败了失败了失败了（打工战士乱入）失败了我失败了我失败了我失败了我失败了好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊好无聊 随便水点什么吧。总之放暑假了之后，实在是找不到什么有趣的事情做 卡皮巴拉玩偶，为什么莫名觉得很像呆唯呢。。。(￣▽￣)ブhhh Key社游戏 夏日口袋攻略：看了动漫后想要上手玩试试，第一次玩Galgame怎么说呢，还算可以，只不过长时间玩会头脑发晕 就我而言鸥线、苍线最有体验感了（后面的两个真结局a、p线还没过），白羽线还没过完紬线我觉得有种黑童话的感觉（鸥线也差不多，只不过是最具幻想感的，主要是很喜欢那种小时候的冒险感） 附图： 上个月买的电磁脉冲器套装 因为对无线电感兴趣，因此试水入手了一台 宝峰-5R，还没有考无线电证书。去年上海的C类考试抢晚了，一直没考 前几个月入手的 高漫6 手绘板，没用多少次，可惜了发挥不出它全部的实力（拖后腿了，抱歉。。。） 关于之前说的 生成式认知主体 的内容，在那之后和专业老师探讨了，可惜本人不太善于接住话题，以至于产生了既然错过了，那就不管了的想法，实在是抱歉了（没有后话了。。。） 以及关于这个个人博客国内无法正常访问，评论系统国内无法使用的问题还没有解决 好麻烦啊。。。突然发现有挺多问题需要解决的。。。"},{"title":"每日/周话题","date":"2025-06-29T14:55:00.000Z","url":"/2025/06/29/%E6%AF%8F%E6%97%A5%E8%AF%9D%E9%A2%98/","categories":[["每日话题","/categories/%E6%AF%8F%E6%97%A5%E8%AF%9D%E9%A2%98/"]],"content":"因为一些考量，临时建立这个频道，先试试水 小提示：感到无事可做时不妨四处走走，说不定会遇上意外事件哦！ 7&#x2F;15记几个最近在意的事情（没有动力去做） 业余无线电证书去青岛旅游（想看看大海、海滩、岛屿）组装电磁脉冲器把买的股票尽快脱手关于自己在网络上的数据，最近需要清理下 暂时就这些吧。。。其他的。。。嗯。。。算了。。。不管了"},{"title":"AI辅助实现的小型生态系统","date":"2025-06-29T13:45:00.000Z","url":"/2025/06/29/AI%E8%BE%85%E5%8A%A9%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%B0%8F%E5%9E%8B%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F/","tags":[["人工智能","/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"AI辅助实现的小型生态系统 设计：每个个体都有自己的行为逻辑，并不共享学习到的内容，但克隆体能够继承被克隆个体所学习到的经验，并且每个个体都有小概率获得突变出新的行为逻辑。克隆体，生成在被克隆体的旁边，并继承被克隆体的行为逻辑。 **阳光能量：**0.05 **植物：**高生命容易繁衍，但有捕食者的威胁（原定位是绿藻的）个体数量：200生命值：8消耗能量：-0.03获取能量：+0.05克隆能量：25克隆花费：20 **捕食者：**不容易繁衍但是，高强度捕猎不到猎物容易死亡（留下了的基本都是生存能力强者）个体数量：10生命值：10消耗能量：-0.05捕猎能量：+1.0奖励能量：1克隆能量：30克隆花费：20 我一开始很难想象，居然能有实现 实时训练+实时学习的方法 如果是这样的化，那么我的另一个构想也是理论上能够实现的。。。 一个通过输入噪声实现的 《生成式认知主体过程》我觉得这个问题能够解释 “我是从哪来的？”这个问题我认为 认知实际上是从“我”的主体上诞生的，所有输入都经过“我”这个主体，因此“我”诞生了 详细的话，等后面的文章再详细阐述，通过思考了很多年我试图吧这些想法写成一篇具体的文章，因此做了一个关于“我的观点”的草稿。。。 代码实现（复盘）俗话说的好（好吧，是我的经验而言）：想要真正的认识到、学习到知识，至少要亲身经历过。。。（代码是AI辅助实现的，我只是提出想法和改进方向，但实用性感觉不怎么样） 定义环境 初始化（定义模型） 循环主体 运行展示 不得不说，这个，这也太美了吧。。。难以置信，这些全部都是靠涌现出来的。。。 "},{"title":"25/27闲聊 无聊中的仪式感","date":"2025-06-27T14:53:00.000Z","url":"/2025/06/27/25-27%E9%9A%8F%E7%AC%94-%E6%97%A0%E8%81%8A%E4%B8%AD%E7%9A%84%E4%BB%AA%E5%BC%8F%E6%84%9F/","categories":[["认知探索","/categories/%E8%AE%A4%E7%9F%A5%E6%8E%A2%E7%B4%A2/"]],"content":""},{"title":"编曲学习记录备份（个人向）","date":"2025-06-23T15:53:00.000Z","url":"/2025/06/23/%E7%BC%96%E6%9B%B2%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E5%A4%87%E4%BB%BD%EF%BC%88%E4%B8%AA%E4%BA%BA%E5%90%91%EF%BC%89/","tags":[["编曲","/tags/%E7%BC%96%E6%9B%B2/"],["fl studio","/tags/fl-studio/"],["乐理","/tags/%E4%B9%90%E7%90%86/"]],"categories":[["音乐","/categories/%E9%9F%B3%E4%B9%90/"]],"content":" 事先声明： 本人非音乐专业，只是在自学编曲过程中的一些记录。 内容可能不够专业，欢迎大佬指点！ 本文转载自：编曲学习记录备份（个人向）——&gt; 自己转载自己 一、基础乐理入门在看完一些大佬 Parion圆周率、iamRHYX 的编曲作品后，决定先了解下乐理的基础 补上。（实际上已经沉淀了两年多，同时也为了缓解收藏夹的压力） 【网页链接】👍 以下是我觉得非常有用的学习资源： 【福利向】三分钟看懂五线谱 超详细乐理讲解 + 各类乐器听力练习 【乐理入门 | 动画】从零开始的乐理世界 Part1.音阶与记谱 写给大人的五线谱入门教程（非常轻松易懂） 在线钢琴练习网站（音效不错） 乐理干货：史上最简单易懂的五线谱基础教程！ 学习方式： 看完视频 + 自己在软件或网站上跟着试一试，差不多练习一周左右可以基本入门（当然因人而异，我自己也没完全熟练）。 二、进阶乐理课程推荐 初步了解之后，如果想更深入地理解五线谱和编曲基础，可以继续学习以下内容： 《从零轻松学习五线谱》全套课程（10集） B站超通俗的乐理课程（30集）适合作曲、编曲、钢琴、吉他等 三、动手写点东西当有点乐理基础之后，可以开始尝试自己做一些简单的作品，比如： 用 FL Studio 写简单旋律（可以从儿歌或熟悉的小曲子开始）把看到的钢琴谱转成 FL Studio 的音符尝试盲听简单旋律，写成谱子（目前我还没做到这一步） 四、编曲抄谱练习找一些现成的谱子，用 FL Studio 复刻出来 或者看到好听的钢琴视频，尝试一边听一边写谱甚至可以尝试将钢琴乐谱转换成fl studio，将fl sudio的音符转换成钢琴谱找些自己喜欢的钢琴曲反复练习 资源链接： 【福利向】三分钟看懂五线谱 👍 乐理干货：史上最简单易懂的五线谱基础教程！ 👍 在线钢琴练习网站（音效不错） 超详细乐理讲解 + 各类乐器听力练习 【乐理入门 | 动画】从零开始的乐理世界 Part1.音阶与记谱 写给大人的五线谱入门教程（非常轻松易懂） 钢琴吧 （很多可以直接练习用的乐谱） 《从零轻松学习五线谱》全套课程（10集） B站超通俗的乐理课程（30集）适合作曲、编曲、钢琴、吉他等 说到底是因为兴趣学的，走到那一步也说不定，做记录只是为了证明我来过 6&#x2F;24更新（记录）尝试抄了几个谱子，同时做了一个原创的一小段 和弦 急促的旋律 什么？你问 Fl Studio 等软件在哪里下载？不知道呢 Ciallo～(∠・ω&lt; )⌒★ 期待下资源库的更新吧。。。 "},{"title":"入口","date":"2025-06-23T09:31:00.000Z","url":"/2025/06/23/%E5%85%A5%E5%8F%A3/","tags":[["生活","/tags/%E7%94%9F%E6%B4%BB/"],["日记","/tags/%E6%97%A5%E8%AE%B0/"]],"categories":[["随笔","/categories/%E9%9A%8F%E7%AC%94/"]],"content":"在世界的边缘处，有一个隐蔽的入口它与世界融为一体，几乎无法发觉 这个世界很小，一眼便能看到世界的边缘 世界的边缘处一片黑暗世界之外是什么？没人知道自从世界的入口被发现后，世界里的存在像着了魔一样走向入口 没人知道世界之外的入口里面有什么也没有人再回来过 进入入口的，会被视为英雄 世界里年长的老者说，入口是在一个世纪前被发现的它告诫我们不要靠近那个地方说里面存在一个黑色的怪物，会把进去的人吃掉 XX进入了入口，但很快就杳无音讯了 我也要进入入口了这是我自己的决定告别了认识的人我进入入口 里面什么都没有一片漆黑身后的世界越来越淡眼前逐渐暗淡，什么都看不见 想回去等回过神来，进入的地方已经看不见了 迷茫的走着只能走，至少不能停下来 里面似乎不存在方向面前时不时出现一道墙壁，但边缘又会出现新的入口 已经不知道走了多久，过了多久只知道已经回不去了也许就会这样倒在这里吧 我继续走着也许某个地方，会有一个出口或者，只是另一个入口 转载自："},{"title":"Giscus实现博客评论的控制","date":"2025-06-23T08:14:00.000Z","url":"/2025/06/23/Giscus%E5%AE%9E%E7%8E%B0%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E7%9A%84%E6%8E%A7%E5%88%B6/","tags":[["hexo","/tags/hexo/"],["giscus","/tags/giscus/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"Giscus实现博客评论的控制由于原先的评论系统Waline国内用户无法使用，我尝试更换更方便的Giscus 因此目前这段时间的话，是同时支持两种评论方式的 虽然我也想多啰嗦几句，但实在想不出什么好段子（水字数） 直接进入正题吧（感觉AI用多了会把我的风格抹除，以及被AI的思维固定住，也许是我使用的方法不对） 配置先去Giscus的官方链接  配置你的 儲存庫 giscus 應用程式 連結的儲存庫已啟用 Discussions 功能 （确保已经开启） Setting &gt; Features &gt; Discussions 配置完成后刷新，下拉到啟用 giscus，你会看到成功得到一段script标签 将其复制下来，黏贴到自己的博文末尾（适当的地方），就可以应用到自己的前端内容了普通的配置方法到这里就完了后面的可以不用看了（omdd） Hexo的配置和使用因为我所使用的不是单纯的前端，还需要进一步配置（我的是butterfly模板） 打开博客目录下的 themes\\butterfly\\layout\\post.pug 在 if page.comments !== false &amp;&amp; theme.comments.use 内容下增加 也可以直接吧属性复制下来贴到里面 完"},{"title":"通过MCP协议令AI控制电脑","date":"2025-06-23T06:35:00.000Z","url":"/2025/06/23/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%B0%8F%E6%99%BA%E6%9C%BA%E5%99%A8%E4%BA%BA-%E9%80%9A%E8%BF%87MCP%E5%8D%8F%E8%AE%AE%E4%BB%A4AI%E6%8E%A7%E5%88%B6%E4%BD%A0%E7%9A%84%E7%94%B5%E8%84%91/","tags":[["人工智能","/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"],["小智AI","/tags/%E5%B0%8F%E6%99%BAAI/"],["MCP","/tags/MCP/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"[嵌入式小智AI机器人] 通过 MCP 协议令 AI 控制你的电脑前几个月入手了最新出来的小智 AI 的 ESP32 开发版，这两天群里的大佬做的 小智 AI_MCP 一键包更新到了 27.35.6 版本，上手玩玩，顺便记录下。 碎碎念不得不说我觉得目前的小智AI除了在 逻辑思维 以及 记忆能力 、 视觉（抽象的图像理解能力） 和 任务化（推理） 方面上，已经是最接近 *智能体 *的产品了。 同时也是近几年 开源势头最猛烈的 、 最平民化的 实体智能体产品。它的低成本硬件（ESP32-S3开发板不到100元）、开源生态（MIT许可证）和强大的社区支持，让普通人也能轻松打造自己的AI助手，堪比当年Linux。（仅代表个人，勿喷） 不过说实在的我有点不甘心，明明也做了类似的东西，但是效果就是差那么点，没达到小智 AI 那种我想要实现的效果。 —— 这个（程序实现） —— 这个（智能终端） —— 还有这个（理论 &amp; 工作流）  难道是我还不够努力吗… 要争取赶上各位大佬 (。&gt;︿&lt;)_θ 为什么 MCP 是一个突破我们知道过去一年时间，AI 模型的发展非常迅速，从 GPT 4 到 Claude Sonnet 3.5 到 Deepseek R1，推理和幻觉都进步的非常明显。 新的 AI 应用也很多，但我们都能感受到的一点是，目前市场上的 AI 应用基本都是全新的服务，和我们原来常用的服务和系统并没有集成，换句话说，AI 模型和我们已有系统集成发展的很缓慢。 例如我们目前还不能同时通过某个 AI 应用来做到联网搜索、发送邮件、发布自己的博客等等，这些功能单个实现都不是很难，但是如果要全部集成到一个系统里面，就会变得遥不可及。 如果你还没有具体的感受，我们可以思考一下日常开发中，想象一下在 IDE 中，我们可以通过 IDE 的 AI 来完成下面这些工作。 询问 AI 来查询本地数据库已有的数据来辅助开发 询问 AI 搜索 Github Issue 来判断某问题是不是已知的bug 通过 AI 将某个 PR 的意见发送给同事的即时通讯软件(例如 Slack)来 Code Review 通过 AI 查询甚至修改当前 AWS、Azure 的配置来完成部署 以上谈到的这些功能通过 MCP 目前正在变为现实，大家可以关注 Cursor MCP 和 Windsurf MCP 获取更多的信息。可以试试用 Cursor MCP + browsertools 插件来体验一下在 Cursor 中自动获取 Chrome dev tools console log 的能力。 为什么 AI 集成已有服务的进展这么缓慢？这里面有很多的原因，一方面是企业级的数据很敏感，大多数企业都要很长的时间和流程来动。另一个方面是技术方面，我们缺少一个开放的、通用的、有共识的协议标准。 MCP 就是 Claude(Anthropic) 主导发布的一个开放的、通用的、有共识的协议标准，如果你是一个对 AI 模型熟悉的开发人员，想必对 Anthropic 这个公司不会陌生，他们发布了 Claude 3.5 Sonnet 的模型，到目前为止应该还是最强的编程 AI 模型(刚写完就发布了 3.7😅)。 这里还是要多提一句，这个协议的发布最好机会应该是属于 OpenAI 的，如果 OpenAI 刚发布 GPT 时就推动协议，相信大家都不会拒绝，但是 OpenAI 变成了 CloseAI，只发布了一个封闭的 GPTs，这种需要主导和共识的标准协议一般很难社区自发形成，一般由行业巨头来主导。 Claude 发布了 MCP 后，官方的 Claude Desktop 就开放了 MCP 功能，并且推动了开源组织 Model Context Protocol，由不同的公司和社区进行参与，例如下面就列举了一些由不同组织发布 MCP 服务器的例子。 关于 MCP 协议为什么是 MCP？ 看到这里你可能有一个问题：在 23 年 OpenAI 发布 GPT function calling 的时候，不是也可以实现类似的功能吗？我们之前博客介绍的 AI Agent，不就是用来集成不同服务吗？那么为什么现在又有 MCP？ 简单总结一下三者之间的区别： Function CallingFunction Calling 指的是 AI 模型根据上下文自动执行函数的机制，充当 AI 模型与外部系统之间的桥梁，不同模型有不同的实现，接入比较零散。 缺点也很明显，比如： 多轮对话不好维护 调用任务增多时管理复杂 Model Context Protocol（MCP）MCP 是一种标准协议，就像 Type-C 接口一样，让 AI 模型能与不同 API、数据源无缝对接，避免各平台零散调用，构建标准化生态。 MCP 有这些优点： 通用标准，服务商可接入，开发者也能方便扩展 把任务分层处理，有描述、有输入&#x2F;输出，能给 AI Agent 大大减少负担 上下文一致，支持复杂对话与任务链式调用 AI AgentAI Agent 就是能自主决策、执行任务的智能体，有 MCP 协议帮忙，它能方便接入各种能力，然后自己分析目标、自动完成任务，不再仅仅停留在“建议你怎么做”的阶段。 MCP 如何工作那我们来介绍一下 MCP 的工作原理。首先我们看一下官方的 MCP 架构图。 MCP 架构图总共分为了下面五个部分： MCP Hosts: Hosts 是指 LLM 启动连接的应用程序，像 Cursor, Claude Desktop、Cline 这样的应用程序。 MCP Clients: 客户端是用来在 Hosts 应用程序内维护与 Server 之间 1:1 连接。 MCP Servers: 通过标准化的协议，为 Client 端提供上下文、工具和提示。 Local Data Sources: 本地的文件、数据库和 API。 Remote Services: 外部的文件、数据库和 API。整个 MCP 协议核心的在于 Server，因为 Host 和 Client 相信熟悉计算机网络的都不会陌生，非常好理解，但是 Server 如何理解呢？ 看看 Cursor 的 AI Agent 发展过程，我们会发现整个 AI 自动化的过程发展会是从 Chat 到 Composer 再进化到完整的 AI Agent。 AI Chat 只是提供建议，如何将 AI 的 response 转化为行为和最终的结果，全部依靠人类，例如手动复制粘贴，或者进行某些修改。 AI Composer 是可以自动修改代码，但是需要人类参与和确认，并且无法做到除了修改代码之外的其它操作。 AI Agent 是一个完全的自动化程序，未来完全可以做到自动读取 Figma 的图片，自动生产代码，自动读取日志，自动调试代码，自动 push 代码到 GitHub。 而 MCP Server 就是为了实现 AI Agent 的自动化而存在的，它是一个中间层，告诉 AI Agent 目前存在哪些服务，哪些 API，哪些数据源，AI Agent 可以根据 Server 提供的信息来决定是否调用某个服务，然后通过 Function Calling 来执行函数。 详细可以去这里看 引用自大佬：  小智AI官方的MCP接口实现： 代码示例： 小智AI_MCP一键包下载链接： 百度网盘（提取码：isdq） 点击安装程序就能自动配置环境，支持自定义功能（需要提前下载好python），比如： 也可以自己扩展，比如整一个开关灯、酷狗点歌之类的小工具，然后放到 C:\\xiaozhi\\MCP\\MCP_Windows 里，模型自动识别。 下面是我给酷狗点歌写的工具示例，直接用 @mcp.tool() 修饰就能给 AI 调用啦： 资源链接： MCP 终极指南 —— （大…大佬…，这个UI爱了） 知乎解读 MCP 协议 MCP 官网 小智AI_MCP一键包下载链接：百度网盘（提取码：isdq） Model Context Protocol A Beginner’s Guide to using MCP in Windsurf! 说实在的感觉我只会使用工具但懒得去了解工具的原理，不知道这对不对（因为学习原理实在太耗费精力了，还不如找点有意思的东西上手试试..）"},{"title":"丝滑的Hexo工作流","date":"2025-06-22T08:39:00.000Z","url":"/2025/06/22/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE-%E4%B8%9D%E6%BB%91%E7%9A%84Hexo%E5%B7%A5%E4%BD%9C%E6%B5%81/","tags":[["hexo","/tags/hexo/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"[个人博客折腾记录] 丝滑的Hexo工作流前阵子折腾 Hexo 部署，有些小技巧记录下来，以后可以一键执行，不用每次手敲命令，也能减少出错概率。 一、添加 CNAME 实现自定义域名自动生效用 GitHub Pages 时，绑定自定义域名只需要在仓库里添加一个 CNAME 文件，里面写上你的域名，比如： 步骤： 在 source/ 目录中创建文件 CNAME（无扩展名），文件内容就是你的域名。 每次执行 hexo g 时，这个文件会自动复制进 public 目录，部署也会自动一起推送，这样 GitHub Pages 就能识别到域名，不再需要手动去 GitHub 设置页面改域名。 重点就是保证 CNAME 持续存在，这样以后再怎么部署也能自动生效啦。 二、一键执行部署和本地预览为了方便，我给自己弄了两个简单的批处理脚本，双击就能执行对应任务，不用再一行一行敲命令。 push.bat（一键部署）： server.bat（本地预览）： 把这两个文件放在 Hexo 根目录，然后右键发送到桌面→快捷方式，就能一键启动。 需要的话还可以加个hexo图标 转换成ico格式，然后在属性的图标设置中更改，完美 三、可视化的博文管理：Hexo-admin用习惯 Markdown，但是偶尔也想在浏览器里写？试试看 hexo-admin！只需： 然后 hexo s 启动本地服务器，打开： 就能用图形界面写博客啦，还能管理草稿。 四、网站统计：Umami Cloud最后再说个统计工具 Umami，完全免费，也能自己部署，集成也很简单： 在官网注册账号，添加你的网站。 把提供的 JS 统计脚本放进主题模板中，比如： 重新部署就能开始记录访客数据啦！后台可视化一目了然，数据隐私也有保障。 五、小结这样一套流程： CNAME 自动生效避免老是重设域名。 批处理一键部署减少操作成本。 hexo-admin让写文更轻松。 Umami 统计帮你直观掌握站点动态。 感觉把工具链弄顺畅，写博客也能更专注享受啦！你也试试看吧，有问题可以留言给我~ 🎉"},{"title":"关于2233看板娘的配置方法","date":"2025-06-21T11:26:00.000Z","url":"/2025/06/21/2025-06-21-%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/","tags":[["看板娘","/tags/%E7%9C%8B%E6%9D%BF%E5%A8%98/"],["2233","/tags/2233/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"[个人博客折腾记录] 关于2233看板娘的配置方法 说实话，这个功能我也是折腾了很久才搞出来，过程比较曲折，代码中也有些 Bug，但是能跑起来就行，不影响效果，所以我就懒得修啦～ _(≧▽≦)&#x2F; 参考来源：详细可参考这位大佬的博客：网页添加 Live2D 看板娘最早出处的链接现在大部分都打不开了，这篇比较新也比较全。 下载项目我用的是 GitHub 上 fghrsh 大佬维护的 Live2D 看板娘 Demo，地址是： 你可以直接访问上面链接下载，也可以用下面的命令克隆下来： 目录结构简介克隆下来之后大致长这样： 其中几个主要文件是： waifu-tips.js：核心逻辑与参数设置 live2d.js：模型核心文件 waifu-tips.json：提示语数据 在 Hexo 中使用如果你用的是 Hexo，比如我用的是 Butterfly 主题，把 assets 整个文件夹复制到 source 目录中，然后再去 Config 文件中添加引入代码即可。 配置文件比如修改 themes/butterfly/_config.yml，找到 inject 配置项，然后在 head 和 bottom 中添加对应脚本引用，如下所示： 只不过随便改个地方都会报错 initModel(““) 改成 ——&gt; 就不能用了 initModel(“https:&#x2F;&#x2F;文件路径&#x2F;waifu-tips.json”) 我不理解 /_ \\ 不是Hexo的话就按正常格式引入到html文件中其中的路径的assets部分记得改成自己的路径 重点提示 waifu-tips.js 依赖 jQuery 库，所以必须先引入 jquery.min.js。 要实现拖动效果，必须引入 jquery-ui.min.js。 autoload.js 会自动帮你加载模型，配置信息都写在 waifu-tips.js 中。 waifu-tips.json 中可以修改对话提示语，也可以换成你自己的模型文件。 还有个目前没有解决的问题，配置好之后只能在主页显示，不能在文章也显示，后面找时间再看看吧… 小结就是这些啦，虽然中间坑不少，但是一旦配置好了，页面就能自动显示一个萌萌的 Live2D 看板娘！希望你也能顺利搞定，遇到问题欢迎随时问我～ *(ฅ&gt;ω&lt;ฅ)"},{"title":"Hexo 个人博客配置记录（GitHub Pages + Butterfly 主题 + Waline 评论 + 自动部署）","date":"2025-06-17T12:00:00.000Z","url":"/2025/06/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/","tags":[["hexo","/tags/hexo/"],["个人博客","/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"],["github","/tags/github/"],["waline","/tags/waline/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"[个人博客折腾记录] Hexo个人博客配置记录 备份备份，收藏栏都块满了，减轻减轻收藏夹压力 一、项目初始化流程1. 安装 Hexo（首次） 2. 创建博客项目目录 3. 本地运行预览 浏览器打开： 二、配置主题（Butterfly）1. 下载 Butterfly 2. 修改配置文件 _config.yml 3. 安装依赖插件（如有） 三、配置 Git 部署1. _config.yml 中增加部署设置 2. 安装部署插件 四、文章写作与发布1. 创建文章 创建文件夹 然后编辑 source/_posts/文章标题.md 文件。 博文内容以md格式写在文件内部 2. 设置分类与标签 3. 生成并部署 五、评论系统配置（Waline）1. 部署 Waline 服务（使用 Vercel）注 同时还需要去leancloud注册账号并获取Api值（建议国际版，国内版还需要申请域名） 详细可以看这里 Waline, LearnCloud配置教程, Vercel 克隆： 在github里创建你自己的waline仓库，并部署至 Vercel 设置环境变量（如 LEAN\\_ID, LEAN\\_KEY,LEAN\\_KEY 等） 这边需要注意下 必须要设置 2. 修改 Butterfly 主题配置 _config.butterfly.yml 配置教程链接:Hexo博客搭建基础教程(三)、Butterfly主题的基础配置 3. 若报错 Not initialized 或 404 确保你设置好 LeanCloud 的应用 Waline 后台功能需要 admin 密钥或配置 LC 应用权限 六、自动部署（可选）1. 使用 GitHub Actions 自动部署 Hexo 到 GitHub Pages 创建 .github/workflows/deploy.yml 示例配置可见： 七、可视化管理（可选）1. 使用 hexo-admin 运行： 然后打开  使用后台管理界面。 八、常用命令小结 命令 功能 hexo new post &quot;标题&quot; 新建文章 hexo new post 文件名 新建文件夹 hexo g 生成静态文件 hexo s 本地启动服务预览 hexo d 部署到远程仓库 hexo g -d 好像也是部署到远程仓库（我用的） hexo clean 清除缓存和旧文件 九、参考配置工具 本地写作：VSCode + Markdown 插件 实时预览：hexo s 自动化：GitHub Actions 评论：Waline 搜索：hexo-generator-searchdb 主题优化：Butterfly + 自定义配置 如需进一步可视化创作、Web 后台文章管理，可结合 Netlify CMS 或搭建更完整的 CMS 前端。"},{"title":"网站加载缓慢和CDN加速","date":"2025-06-17T11:26:00.000Z","url":"/2025/06/17/test/","tags":[["日常","/tags/%E6%97%A5%E5%B8%B8/"]],"categories":[["undefined",""]],"content":"这是一个测试"},{"title":"Markdown基础语法","date":"2025-06-16T06:08:03.000Z","url":"/2025/06/16/My-New-Post/","tags":[["Hexo","/tags/Hexo/"],["Butterfly 主题","/tags/Butterfly-%E4%B8%BB%E9%A2%98/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":" Markdown 基础语法教程Markdown 是一种轻量级标记语言，常用于编写 README 文件、博客、技术文档、笔记等。它以纯文本形式书写，使用简洁的语法标记格式，可以快速生成结构良好的 HTML 页面。 本文将系统介绍 Markdown 的基础语法，帮助你快速上手。 目录 标题 段落与换行 字体样式 列表 引用 代码块 链接 图片 分割线 转义字符 表格 内嵌 HTML 更多学习资源 标题使用 # 来表示标题，# 的数量表示标题的级别（共六级）： 显示效果： 一级标题二级标题三级标题四级标题五级标题六级标题 段落与换行 段落之间空一行 若想换行，行末加两个空格再回车 字体样式 显示效果： 加粗斜体删除线行内代码 列表无序列表使用 -、* 或 + 均可： 有序列表 引用使用 &gt; 进行引用，可嵌套： 显示效果： 这是一个引用 这是嵌套引用 代码块行内代码用反引号 ` 包裹： 多行代码（代码块）使用三个反引号 ``` 或 缩进四个空格： 示例： 链接 示例： 访问 Google 还可以使用引用形式： 图片语法类似链接，只需在前面加 !： 示例： 分割线使用三个或更多 -、* 或 _： 转义字符Markdown 使用特殊字符时需要转义： 常见需要转义的符号： 表格 显示效果： 姓名 年龄 城市 张三 18 北京 李四 22 上海 还可以对齐： 内嵌 HTMLMarkdown 支持少量 HTML 标签： 更多学习资源 Markdown 官方语法说明 Markdown Cheatsheet Typora 编辑器：所见即所得 MarkText：开源 Markdown 编辑器 在线 Markdown 编辑器 希望这篇教程能帮助你快速入门 Markdown，如果你在使用中遇到问题，欢迎留言讨论！ 其他因为最近懒得码字了这篇文章由AI生成，个人认为如果能理解并检查出错误的AI环境部分，那么用AI作为辅助工具来说还是很便利的 &#x2F;&#x2F;&#x2F;不过我认为我们需要通过系统化的方式结合智能化，比如做到在结束了一天的学习后，AI自动将一天的动态更新到个人知识库 这种&#x2F;&#x2F;&#x2F; 提示词开源 帮我写一篇详细的 Markdown基础语法 的博客教程 "},{"title":"一个刚大一的普通大学生","date":"2025-04-30T16:32:00.000Z","url":"/2025/05/01/hello-world/","categories":[["生活","/categories/%E7%94%9F%E6%B4%BB/"]],"content":"关于我一名正在山东上大学的普通大学生（虽然说是在上海成长的。。。） 在多次了解到个人网站领域的信息后，出于兴趣搭起来的这个网站，希望通过不断的更新这个网站给现实的自己一个坐标，记录生活，想法，以及一些遇到技术性问题 同时在不断的被现实和理想撕扯后，这几年不段的深入精神邻域让我感觉整个人有点空了，像是在水中不断沉溺的感觉一样 个人经历的话，嗯。。。也许过去自己做过很多，但没有记录保存的意识，因此丢失了很多，无论是知识想法，又或者是学到的技术，因此建这个博客也有一方面这个理由 算是半个”社恐”吧？不过我自己始终不认为自己是社恐，因为我觉得自己只是不擅长和别人沟通交流，但自己的个人想法在他者的角度上来讲还是挺多的（俗称自言自语） 更确切的来讲是具备自己的想法和意识，因此对他人普遍保持警惕和距离感吧因此也许是因为这个原因，本人没什么朋友 个人爱好我对任何事物都感兴趣，这是我过去几年刻意培养的价值观。我渴望知识，常常沉迷于探索与学习的过程中。也正因为如此，我的行动阈值反而被拉高了很多——兴趣太广，反而不知道该从哪里下手。 如果非要说最近特别感兴趣的方向，可能包括：编曲、绘画、小说创作、天文观测、无线电、钢琴、英语、动漫、漫画、幻想与自我探索……基本上是个技术宅，也没有特别熟的人能一起交流这些。 不过最精深的还是计算机 技术能力的话，我已经有四年的计算机学习经验，目前是人工智能专业，对 AI 的兴趣已经持续了快四年 这段时间内，我接触了很多领域内容：（但有的太高深了，不怎么能看懂） 神经网络、多层感知机、循环神经网络、LSTM长短记忆网络 Transformer架构、大语言模型(LLM) 机器学习，深度学习，强化学习 最近的话，我一直有在研究，关于策略神经网络（属于深度学习和强化学习结合实现的实时学习）和生成式认知主体、脑神经机制、思维的生成过程之间的关系 希望自己能够在有生之年至少能够完成一篇论文形式的成就，帮助AI领域的发展，这几乎已经成为我的执念了 生活观与精神状态这一块很难简短描述，只能说：我有很多想交流的东西，但共鸣者太稀缺了。 这个网站用的是 Hexo 框架，属于私人博客，暂不支持用户发布文章，只开放评论交流。 欢迎留言讨论（但请保持友好与理性），如果出现无意义或破坏性的言论，我会删评论。 后续我会更新一些教程，比如 Hexo 的配置方法、Markdown 的使用技巧，以及一些关于 AI 和认知方面的思考记录，也欢迎访问友联留言。 如果你还想了解我？可以前往首页的「关于我」再看看。"}]